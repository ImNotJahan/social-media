diff --git a/node_modules/react-native-image-viewing/.DS_Store b/node_modules/react-native-image-viewing/.DS_Store
new file mode 100644
index 0000000..4d37d8f
Binary files /dev/null and b/node_modules/react-native-image-viewing/.DS_Store differ
diff --git a/node_modules/react-native-image-viewing/dist/.DS_Store b/node_modules/react-native-image-viewing/dist/.DS_Store
new file mode 100644
index 0000000..dc9a720
Binary files /dev/null and b/node_modules/react-native-image-viewing/dist/.DS_Store differ
diff --git a/node_modules/react-native-image-viewing/dist/components/.DS_Store b/node_modules/react-native-image-viewing/dist/components/.DS_Store
new file mode 100644
index 0000000..9e4b49d
Binary files /dev/null and b/node_modules/react-native-image-viewing/dist/components/.DS_Store differ
diff --git a/node_modules/react-native-image-viewing/dist/components/ImageItem/ImageItem.ios.js b/node_modules/react-native-image-viewing/dist/components/ImageItem/ImageItem.ios.js
index 0708505..7badedc 100644
--- a/node_modules/react-native-image-viewing/dist/components/ImageItem/ImageItem.ios.js
+++ b/node_modules/react-native-image-viewing/dist/components/ImageItem/ImageItem.ios.js
@@ -11,6 +11,11 @@ import useDoubleTapToZoom from "../../hooks/useDoubleTapToZoom";
 import useImageDimensions from "../../hooks/useImageDimensions";
 import { getImageStyles, getImageTransform } from "../../utils";
 import { ImageLoading } from "./ImageLoading";
+
+// for the caching
+import { Image } from "expo-image";
+const AnimatedImage = Animated.createAnimatedComponent(Image);
+
 const SWIPE_CLOSE_OFFSET = 75;
 const SWIPE_CLOSE_VELOCITY = 1.55;
 const SCREEN = Dimensions.get("screen");
@@ -62,7 +67,7 @@ const ImageItem = ({ imageSrc, onZoom, onRequestClose, onLongPress, delayLongPre
     })}>
         {(!loaded || !imageDimensions) && <ImageLoading />}
         <TouchableWithoutFeedback onPress={doubleTapToZoomEnabled ? handleDoubleTap : undefined} onLongPress={onLongPressHandler} delayLongPress={delayLongPress}>
-          <Animated.Image source={imageSrc} style={imageStylesWithOpacity} onLoad={() => setLoaded(true)}/>
+          <AnimatedImage source={imageSrc} style={imageStylesWithOpacity} onLoad={() => setLoaded(true)}/>
         </TouchableWithoutFeedback>
       </ScrollView>
     </View>);
diff --git a/node_modules/react-native-image-viewing/dist/hooks/useImageDimensions.js b/node_modules/react-native-image-viewing/dist/hooks/useImageDimensions.js
index d89a3a1..51cb9f6 100644
--- a/node_modules/react-native-image-viewing/dist/hooks/useImageDimensions.js
+++ b/node_modules/react-native-image-viewing/dist/hooks/useImageDimensions.js
@@ -6,7 +6,7 @@
  *
  */
 import { useEffect, useState } from "react";
-import { Image } from "react-native";
+import { Image } from "expo-image";
 import { createCache } from "../utils";
 const CACHE_SIZE = 50;
 const imageDimensionsCache = createCache(CACHE_SIZE);
@@ -34,13 +34,11 @@ const useImageDimensions = (image) => {
                     resolve(imageDimensions);
                 }
                 else {
-                    // @ts-ignore
-                    Image.getSizeWithHeaders(source.uri, source.headers, (width, height) => {
-                        imageDimensionsCache.set(cacheKey, { width, height });
-                        resolve({ width, height });
-                    }, () => {
-                        resolve({ width: 0, height: 0 });
-                    });
+                    width = image.width;
+                    height = image.height;
+
+                    imageDimensionsCache.set(cacheKey, {width, height});
+                    resolve({width, height})
                 }
             }
             else {
